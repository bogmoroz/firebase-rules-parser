// Generated from ./src/FirestoreRules.g4 by ANTLR 4.7.3-SNAPSHOT
import { ATN } from 'antlr4ts/atn/ATN';
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer';
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import * as Utils from 'antlr4ts/misc/Utils';
import { Vocabulary } from 'antlr4ts/Vocabulary';
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl';

export class FirestoreRulesLexer extends Lexer {
  // @Override
  // @NotNull
  public get vocabulary(): Vocabulary {
    return FirestoreRulesLexer.VOCABULARY;
  }

  // @Override
  public get grammarFileName(): string {
    return 'FirestoreRules.g4';
  }

  // @Override
  public get ruleNames(): string[] {
    return FirestoreRulesLexer.ruleNames;
  }

  // @Override
  public get serializedATN(): string {
    return FirestoreRulesLexer._serializedATN;
  }

  // @Override
  public get channelNames(): string[] {
    return FirestoreRulesLexer.channelNames;
  }

  // @Override
  public get modeNames(): string[] {
    return FirestoreRulesLexer.modeNames;
  }
  public static get _ATN(): ATN {
    if (!FirestoreRulesLexer.__ATN) {
      FirestoreRulesLexer.__ATN = new ATNDeserializer().deserialize(
        Utils.toCharArray(FirestoreRulesLexer._serializedATN)
      );
    }

    return FirestoreRulesLexer.__ATN;
  }
  public static readonly T__0 = 1;
  public static readonly T__1 = 2;
  public static readonly T__2 = 3;
  public static readonly T__3 = 4;
  public static readonly T__4 = 5;
  public static readonly T__5 = 6;
  public static readonly T__6 = 7;
  public static readonly T__7 = 8;
  public static readonly T__8 = 9;
  public static readonly T__9 = 10;
  public static readonly T__10 = 11;
  public static readonly T__11 = 12;
  public static readonly T__12 = 13;
  public static readonly T__13 = 14;
  public static readonly T__14 = 15;
  public static readonly T__15 = 16;
  public static readonly T__16 = 17;
  public static readonly T__17 = 18;
  public static readonly T__18 = 19;
  public static readonly T__19 = 20;
  public static readonly T__20 = 21;
  public static readonly T__21 = 22;
  public static readonly T__22 = 23;
  public static readonly T__23 = 24;
  public static readonly T__24 = 25;
  public static readonly Match = 26;
  public static readonly If = 27;
  public static readonly True = 28;
  public static readonly False = 29;
  public static readonly List = 30;
  public static readonly Get = 31;
  public static readonly Create = 32;
  public static readonly Update = 33;
  public static readonly Read = 34;
  public static readonly Write = 35;
  public static readonly Delete = 36;
  public static readonly Return = 37;
  public static readonly Null = 38;
  public static readonly ObjectReference = 39;
  public static readonly Number = 40;
  public static readonly String = 41;
  public static readonly Identifier = 42;
  public static readonly Slash = 43;
  public static readonly WS = 44;
  public static readonly Comment = 45;

  // tslint:disable:no-trailing-whitespace
  public static readonly channelNames: string[] = ['DEFAULT_TOKEN_CHANNEL', 'HIDDEN'];

  // tslint:disable:no-trailing-whitespace
  public static readonly modeNames: string[] = ['DEFAULT_MODE'];

  public static readonly ruleNames: string[] = [
    'T__0',
    'T__1',
    'T__2',
    'T__3',
    'T__4',
    'T__5',
    'T__6',
    'T__7',
    'T__8',
    'T__9',
    'T__10',
    'T__11',
    'T__12',
    'T__13',
    'T__14',
    'T__15',
    'T__16',
    'T__17',
    'T__18',
    'T__19',
    'T__20',
    'T__21',
    'T__22',
    'T__23',
    'T__24',
    'Match',
    'If',
    'True',
    'False',
    'List',
    'Get',
    'Create',
    'Update',
    'Read',
    'Write',
    'Delete',
    'Return',
    'Null',
    'ObjectReference',
    'Number',
    'String',
    'Identifier',
    'Slash',
    'WS',
    'Comment',
  ];

  public static readonly _LITERAL_NAMES: Array<string | undefined> = [
    undefined,
    "'service'",
    "'{'",
    "'}'",
    "'allow'",
    "','",
    "':'",
    "';'",
    "'$('",
    "')'",
    "'='",
    "'**'",
    "'function'",
    "'('",
    "'<'",
    "'=='",
    "'>'",
    "'!='",
    "'&&'",
    "'||'",
    "'.'",
    "'['",
    "']'",
    "'+'",
    "'-'",
    "'*'",
    "'match'",
    "'if'",
    "'true'",
    "'false'",
    "'list'",
    "'get'",
    "'create'",
    "'update'",
    "'read'",
    "'write'",
    "'delete'",
    "'return'",
    "'null'",
    undefined,
    undefined,
    undefined,
    undefined,
    "'/'",
  ];
  public static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    'Match',
    'If',
    'True',
    'False',
    'List',
    'Get',
    'Create',
    'Update',
    'Read',
    'Write',
    'Delete',
    'Return',
    'Null',
    'ObjectReference',
    'Number',
    'String',
    'Identifier',
    'Slash',
    'WS',
    'Comment',
  ];
  public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(
    FirestoreRulesLexer._LITERAL_NAMES,
    FirestoreRulesLexer._SYMBOLIC_NAMES,
    []
  );

  public static readonly _serializedATN: string =
    '\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02/\u0122\b\x01' +
    '\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06' +
    '\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r' +
    '\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t' +
    '\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t' +
    '\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t' +
    '\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04"\t' +
    "\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04'\t'\x04(\t(\x04)\t)\x04*\t*\x04" +
    '+\t+\x04,\t,\x04-\t-\x04.\t.\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03' +
    '\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03' +
    '\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03' +
    '\b\x03\t\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\f\x03\r\x03' +
    '\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03' +
    '\x0F\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03' +
    '\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03' +
    '\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03' +
    '\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03' +
    '\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03' +
    '\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03' +
    ' \x03!\x03!\x03!\x03!\x03!\x03!\x03!\x03"\x03"\x03"\x03"\x03"\x03' +
    '"\x03"\x03#\x03#\x03#\x03#\x03#\x03$\x03$\x03$\x03$\x03$\x03$\x03%\x03' +
    "%\x03%\x03%\x03%\x03%\x03%\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x03'\x03" +
    "'\x03'\x03'\x03'\x03(\x03(\x03(\x06(\xF3\n(\r(\x0E(\xF4\x03)\x06)" +
    '\xF8\n)\r)\x0E)\xF9\x03)\x03)\x06)\xFE\n)\r)\x0E)\xFF\x05)\u0102\n)\x03' +
    '*\x03*\x07*\u0106\n*\f*\x0E*\u0109\v*\x03*\x03*\x03+\x03+\x07+\u010F\n' +
    '+\f+\x0E+\u0112\v+\x03,\x03,\x03-\x03-\x03-\x03-\x03.\x03.\x03.\x03.\x07' +
    '.\u011E\n.\f.\x0E.\u0121\v.\x02\x02\x02/\x03\x02\x03\x05\x02\x04\x07\x02' +
    '\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02' +
    '\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12' +
    "#\x02\x13%\x02\x14'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02" +
    '\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02"C' +
    "\x02#E\x02$G\x02%I\x02&K\x02'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02" +
    '.[\x02/\x03\x02\x07\x03\x02))\x05\x02C\\aac|\x07\x02//2;C\\aac|\x05\x02' +
    '\v\f\x0F\x0F""\x03\x02\f\f\x02\u0128\x02\x03\x03\x02\x02\x02\x02\x05' +
    '\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03' +
    '\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03' +
    '\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03' +
    '\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03' +
    '\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02' +
    "\x02\x02\x02%\x03\x02\x02\x02\x02'\x03\x02\x02\x02\x02)\x03\x02\x02\x02" +
    '\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03' +
    '\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02' +
    '\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02' +
    '?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02' +
    '\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02' +
    '\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03' +
    '\x02\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02' +
    '\x02\x02[\x03\x02\x02\x02\x03]\x03\x02\x02\x02\x05e\x03\x02\x02\x02\x07' +
    'g\x03\x02\x02\x02\ti\x03\x02\x02\x02\vo\x03\x02\x02\x02\rq\x03\x02\x02' +
    '\x02\x0Fs\x03\x02\x02\x02\x11u\x03\x02\x02\x02\x13x\x03\x02\x02\x02\x15' +
    'z\x03\x02\x02\x02\x17|\x03\x02\x02\x02\x19\x7F\x03\x02\x02\x02\x1B\x88' +
    '\x03\x02\x02\x02\x1D\x8A\x03\x02\x02\x02\x1F\x8C\x03\x02\x02\x02!\x8F' +
    "\x03\x02\x02\x02#\x91\x03\x02\x02\x02%\x94\x03\x02\x02\x02'\x97\x03\x02" +
    '\x02\x02)\x9A\x03\x02\x02\x02+\x9C\x03\x02\x02\x02-\x9E\x03\x02\x02\x02' +
    '/\xA0\x03\x02\x02\x021\xA2\x03\x02\x02\x023\xA4\x03\x02\x02\x025\xA6\x03' +
    '\x02\x02\x027\xAC\x03\x02\x02\x029\xAF\x03\x02\x02\x02;\xB4\x03\x02\x02' +
    '\x02=\xBA\x03\x02\x02\x02?\xBF\x03\x02\x02\x02A\xC3\x03\x02\x02\x02C\xCA' +
    '\x03\x02\x02\x02E\xD1\x03\x02\x02\x02G\xD6\x03\x02\x02\x02I\xDC\x03\x02' +
    '\x02\x02K\xE3\x03\x02\x02\x02M\xEA\x03\x02\x02\x02O\xEF\x03\x02\x02\x02' +
    'Q\xF7\x03\x02\x02\x02S\u0103\x03\x02\x02\x02U\u010C\x03\x02\x02\x02W\u0113' +
    '\x03\x02\x02\x02Y\u0115\x03\x02\x02\x02[\u0119\x03\x02\x02\x02]^\x07u' +
    '\x02\x02^_\x07g\x02\x02_`\x07t\x02\x02`a\x07x\x02\x02ab\x07k\x02\x02b' +
    'c\x07e\x02\x02cd\x07g\x02\x02d\x04\x03\x02\x02\x02ef\x07}\x02\x02f\x06' +
    '\x03\x02\x02\x02gh\x07\x7F\x02\x02h\b\x03\x02\x02\x02ij\x07c\x02\x02j' +
    'k\x07n\x02\x02kl\x07n\x02\x02lm\x07q\x02\x02mn\x07y\x02\x02n\n\x03\x02' +
    '\x02\x02op\x07.\x02\x02p\f\x03\x02\x02\x02qr\x07<\x02\x02r\x0E\x03\x02' +
    '\x02\x02st\x07=\x02\x02t\x10\x03\x02\x02\x02uv\x07&\x02\x02vw\x07*\x02' +
    '\x02w\x12\x03\x02\x02\x02xy\x07+\x02\x02y\x14\x03\x02\x02\x02z{\x07?\x02' +
    '\x02{\x16\x03\x02\x02\x02|}\x07,\x02\x02}~\x07,\x02\x02~\x18\x03\x02\x02' +
    '\x02\x7F\x80\x07h\x02\x02\x80\x81\x07w\x02\x02\x81\x82\x07p\x02\x02\x82' +
    '\x83\x07e\x02\x02\x83\x84\x07v\x02\x02\x84\x85\x07k\x02\x02\x85\x86\x07' +
    'q\x02\x02\x86\x87\x07p\x02\x02\x87\x1A\x03\x02\x02\x02\x88\x89\x07*\x02' +
    '\x02\x89\x1C\x03\x02\x02\x02\x8A\x8B\x07>\x02\x02\x8B\x1E\x03\x02\x02' +
    '\x02\x8C\x8D\x07?\x02\x02\x8D\x8E\x07?\x02\x02\x8E \x03\x02\x02\x02\x8F' +
    '\x90\x07@\x02\x02\x90"\x03\x02\x02\x02\x91\x92\x07#\x02\x02\x92\x93\x07' +
    '?\x02\x02\x93$\x03\x02\x02\x02\x94\x95\x07(\x02\x02\x95\x96\x07(\x02\x02' +
    '\x96&\x03\x02\x02\x02\x97\x98\x07~\x02\x02\x98\x99\x07~\x02\x02\x99(\x03' +
    '\x02\x02\x02\x9A\x9B\x070\x02\x02\x9B*\x03\x02\x02\x02\x9C\x9D\x07]\x02' +
    '\x02\x9D,\x03\x02\x02\x02\x9E\x9F\x07_\x02\x02\x9F.\x03\x02\x02\x02\xA0' +
    '\xA1\x07-\x02\x02\xA10\x03\x02\x02\x02\xA2\xA3\x07/\x02\x02\xA32\x03\x02' +
    '\x02\x02\xA4\xA5\x07,\x02\x02\xA54\x03\x02\x02\x02\xA6\xA7\x07o\x02\x02' +
    '\xA7\xA8\x07c\x02\x02\xA8\xA9\x07v\x02\x02\xA9\xAA\x07e\x02\x02\xAA\xAB' +
    '\x07j\x02\x02\xAB6\x03\x02\x02\x02\xAC\xAD\x07k\x02\x02\xAD\xAE\x07h\x02' +
    '\x02\xAE8\x03\x02\x02\x02\xAF\xB0\x07v\x02\x02\xB0\xB1\x07t\x02\x02\xB1' +
    '\xB2\x07w\x02\x02\xB2\xB3\x07g\x02\x02\xB3:\x03\x02\x02\x02\xB4\xB5\x07' +
    'h\x02\x02\xB5\xB6\x07c\x02\x02\xB6\xB7\x07n\x02\x02\xB7\xB8\x07u\x02\x02' +
    '\xB8\xB9\x07g\x02\x02\xB9<\x03\x02\x02\x02\xBA\xBB\x07n\x02\x02\xBB\xBC' +
    '\x07k\x02\x02\xBC\xBD\x07u\x02\x02\xBD\xBE\x07v\x02\x02\xBE>\x03\x02\x02' +
    '\x02\xBF\xC0\x07i\x02\x02\xC0\xC1\x07g\x02\x02\xC1\xC2\x07v\x02\x02\xC2' +
    '@\x03\x02\x02\x02\xC3\xC4\x07e\x02\x02\xC4\xC5\x07t\x02\x02\xC5\xC6\x07' +
    'g\x02\x02\xC6\xC7\x07c\x02\x02\xC7\xC8\x07v\x02\x02\xC8\xC9\x07g\x02\x02' +
    '\xC9B\x03\x02\x02\x02\xCA\xCB\x07w\x02\x02\xCB\xCC\x07r\x02\x02\xCC\xCD' +
    '\x07f\x02\x02\xCD\xCE\x07c\x02\x02\xCE\xCF\x07v\x02\x02\xCF\xD0\x07g\x02' +
    '\x02\xD0D\x03\x02\x02\x02\xD1\xD2\x07t\x02\x02\xD2\xD3\x07g\x02\x02\xD3' +
    '\xD4\x07c\x02\x02\xD4\xD5\x07f\x02\x02\xD5F\x03\x02\x02\x02\xD6\xD7\x07' +
    'y\x02\x02\xD7\xD8\x07t\x02\x02\xD8\xD9\x07k\x02\x02\xD9\xDA\x07v\x02\x02' +
    '\xDA\xDB\x07g\x02\x02\xDBH\x03\x02\x02\x02\xDC\xDD\x07f\x02\x02\xDD\xDE' +
    '\x07g\x02\x02\xDE\xDF\x07n\x02\x02\xDF\xE0\x07g\x02\x02\xE0\xE1\x07v\x02' +
    '\x02\xE1\xE2\x07g\x02\x02\xE2J\x03\x02\x02\x02\xE3\xE4\x07t\x02\x02\xE4' +
    '\xE5\x07g\x02\x02\xE5\xE6\x07v\x02\x02\xE6\xE7\x07w\x02\x02\xE7\xE8\x07' +
    't\x02\x02\xE8\xE9\x07p\x02\x02\xE9L\x03\x02\x02\x02\xEA\xEB\x07p\x02\x02' +
    '\xEB\xEC\x07w\x02\x02\xEC\xED\x07n\x02\x02\xED\xEE\x07n\x02\x02\xEEN\x03' +
    '\x02\x02\x02\xEF\xF2\x05U+\x02\xF0\xF1\x070\x02\x02\xF1\xF3\x05U+\x02' +
    '\xF2\xF0\x03\x02\x02\x02\xF3\xF4\x03\x02\x02\x02\xF4\xF2\x03\x02\x02\x02' +
    '\xF4\xF5\x03\x02\x02\x02\xF5P\x03\x02\x02\x02\xF6\xF8\x042;\x02\xF7\xF6' +
    '\x03\x02\x02\x02\xF8\xF9\x03\x02\x02\x02\xF9\xF7\x03\x02\x02\x02\xF9\xFA' +
    '\x03\x02\x02\x02\xFA\u0101\x03\x02\x02\x02\xFB\xFD\x070\x02\x02\xFC\xFE' +
    '\x042;\x02\xFD\xFC\x03\x02\x02\x02\xFE\xFF\x03\x02\x02\x02\xFF\xFD\x03' +
    '\x02\x02\x02\xFF\u0100\x03\x02\x02\x02\u0100\u0102\x03\x02\x02\x02\u0101' +
    '\xFB\x03\x02\x02\x02\u0101\u0102\x03\x02\x02\x02\u0102R\x03\x02\x02\x02' +
    '\u0103\u0107\x07)\x02\x02\u0104\u0106\n\x02\x02\x02\u0105\u0104\x03\x02' +
    '\x02\x02\u0106\u0109\x03\x02\x02\x02\u0107\u0105\x03\x02\x02\x02\u0107' +
    '\u0108\x03\x02\x02\x02\u0108\u010A\x03\x02\x02\x02\u0109\u0107\x03\x02' +
    '\x02\x02\u010A\u010B\x07)\x02\x02\u010BT\x03\x02\x02\x02\u010C\u0110\t' +
    '\x03\x02\x02\u010D\u010F\t\x04\x02\x02\u010E\u010D\x03\x02\x02\x02\u010F' +
    '\u0112\x03\x02\x02\x02\u0110\u010E\x03\x02\x02\x02\u0110\u0111\x03\x02' +
    '\x02\x02\u0111V\x03\x02\x02\x02\u0112\u0110\x03\x02\x02\x02\u0113\u0114' +
    '\x071\x02\x02\u0114X\x03\x02\x02\x02\u0115\u0116\t\x05\x02\x02\u0116\u0117' +
    '\x03\x02\x02\x02\u0117\u0118\b-\x02\x02\u0118Z\x03\x02\x02\x02\u0119\u011A' +
    '\x071\x02\x02\u011A\u011B\x071\x02\x02\u011B\u011F\x03\x02\x02\x02\u011C' +
    '\u011E\n\x06\x02\x02\u011D\u011C\x03\x02\x02\x02\u011E\u0121\x03\x02\x02' +
    '\x02\u011F\u011D\x03\x02\x02\x02\u011F\u0120\x03\x02\x02\x02\u0120\\\x03' +
    '\x02\x02\x02\u0121\u011F\x03\x02\x02\x02\n\x02\xF4\xF9\xFF\u0101\u0107' +
    '\u0110\u011F\x03\b\x02\x02';
  public static __ATN: ATN;

  // tslint:enable:no-trailing-whitespace

  constructor(input: CharStream) {
    super(input);
    this._interp = new LexerATNSimulator(FirestoreRulesLexer._ATN, this);
  }
}
